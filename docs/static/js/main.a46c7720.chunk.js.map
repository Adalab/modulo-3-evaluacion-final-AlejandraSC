{"version":3,"sources":["images/headerLogo.png","components/Header.js","components/CharacterCard.js","images/notFoundCharacter.png","components/CharacterList.js","components/Filters.js","services/getDataFromApi.js","components/CharacterDetail.js","components/Loading.js","components/App.js","index.js"],"names":["Header","className","src","headerLogo","alt","CharacterCard","props","to","user","id","image","name","title","species","CharacterList","userElements","users","map","length","notFoundCharacter","Filters","onSubmit","ev","preventDefault","htmlFor","type","placeholder","value","nameFilter","onChange","handleFilter","target","key","getDataFromApi","fetch","then","response","json","data","results","result","status","origin","episodes","episode","CharacterDetail","Loading","Spinner","animation","role","App","useState","setUsers","setNameFilter","isLoading","setIsLoading","useEffect","filteredUsers","filter","toUpperCase","includes","sort","a","b","localeCompare","exact","path","component","routeCharacterId","parseInt","match","params","characterId","getUsers","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a46c7720.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/headerLogo.de13d484.png\";","import headerLogo from '../images/headerLogo.png';\nimport '../stylesheets/header.scss';\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <img src={headerLogo} alt=\"Rick and Morty logo\" className=\"header__logo\" />\n    </div>\n  );\n};\n\nexport default Header;\n","import '../stylesheets/characterCard.scss';\nimport Proptypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst CharacterCard = (props) => {\n  //console.log(props.user);\n  return (\n    <Link to={`/character/${props.user.id}`}>\n      <li className=\"card\">\n        <img className=\"card__img\" src={props.user.image} alt={`Foto de ${props.user.name}`} title={`Foto de ${props.user.name}`} />\n        <h2 className=\"card__name\">{props.user.name}</h2>\n        <h4 className=\"card__species\">{props.user.species}</h4>\n      </li>\n    </Link>\n  );\n};\n\nCharacterCard.propTypes = {\n  image: Proptypes.string,\n  name: Proptypes.string,\n  species: Proptypes.string,\n};\n\nexport default CharacterCard;\n","export default __webpack_public_path__ + \"static/media/notFoundCharacter.0750d412.png\";","import '../stylesheets/characterList.scss';\nimport CharacterCard from './CharacterCard';\nimport notFoundCharacter from '../images/notFoundCharacter.png';\n\nconst CharacterList = (props) => {\n  const userElements = props.users.map((user) => {\n    return <CharacterCard key={user.id} user={user} />;\n  });\n\n  return (\n    <section>\n      <ul className=\"cards\">{userElements}</ul>\n      <div className=\"container\">\n        {props.users.length === 0 && (\n          <div className=\"urlNotFound__container\">\n            <p className=\"urlNotFound__text\">There is no result for this search, please try again! </p>\n            <img src={notFoundCharacter} alt=\"Sorry\" className=\"notFound__img\"></img>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default CharacterList;\n","import '../stylesheets/filters.scss';\n\nconst Filters = (props) => {\n  const handleChange = (ev) => {\n    //console.log(ev.type, ev.target.value);\n    props.handleFilter({\n      value: ev.target.value,\n      key: 'name',\n    });\n  };\n\n  const handleFormSubmit = (ev) => {\n    ev.preventDefault();\n  };\n\n  return (\n    <form onSubmit={handleFormSubmit} className=\"form__Text\">\n      <label className=\"form__label display block\" htmlFor=\"name\"></label>\n      <input className=\"form__input-text\" type=\"text\" name=\"name\" id=\"name\" placeholder=\"What character are you looking for? \" value={props.nameFilter} onChange={handleChange} />\n    </form>\n  );\n};\n\nexport default Filters;\n","const getDataFromApi = () => {\n  return fetch('https://rickandmortyapi.com/api/character/')\n    .then((response) => response.json())\n    .then((data) => {\n      return data.results.map((result) => {\n        //console.log(result);\n        return {\n          id: result.id,\n          image: result.image,\n          name: result.name,\n          species: result.species,\n          status: result.status,\n          origin: result.origin.name,\n          episodes: result.episode.length,\n        };\n      });\n    });\n};\n\nexport default getDataFromApi;\n","import '../stylesheets/characterDetail.scss';\nimport Proptypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst CharacterDetail = (props) => {\n  const getStatus = () => (props.user.status === 'Alive' ? 'Alive ðŸ¤º' : props.user.status === 'Dead' ? 'ðŸ’€' : 'Unknown ðŸ‘»');\n\n  return (\n    <>\n      <section className=\"modal__Container\">\n        <div className=\"detail__infoContainer\">\n          <img src={props.user.image} alt={props.user.name} className=\"detail__image\"></img>\n          <h1 className=\"detail__name\">{props.user.name}</h1>\n          <p className=\"character__details\">\n            Status: <span className=\"answer__details\">{getStatus()}</span>\n          </p>\n          <p className=\"character__details\">\n            Specie: <span className=\"answer__details\">{props.user.species}</span>\n          </p>\n          <p className=\"character__details\">\n            Origin: <span className=\"answer__details\">{props.user.origin}</span>\n          </p>\n          <p className=\"character__details\">\n            Episodes: <span className=\"answer__details\">{props.user.episodes}</span>\n          </p>\n          <Link to=\"/\">\n            <input className=\"btn__goBack\" type=\"button\" value=\"Go back\" />\n          </Link>\n        </div>\n      </section>\n    </>\n  );\n};\n\nCharacterDetail.propTypes = {\n  status: Proptypes.string,\n  name: Proptypes.string,\n  species: Proptypes.string,\n  origin: Proptypes.string,\n  episodes: Proptypes.string,\n};\n\nexport default CharacterDetail;\n","import '../stylesheets/loading.scss';\nimport React from 'react';\nimport { Spinner } from 'reactstrap';\n\nconst Loading = () => {\n  return (\n    <>\n      <Spinner animation=\"border\" role=\"status\" className=\"loading\" />\n    </>\n  );\n};\n\nexport default Loading;\n","import '../stylesheets/app.scss';\nimport Header from './Header';\nimport CharacterList from './CharacterList';\nimport Filters from './Filters';\nimport getDataFromApi from '../services/getDataFromApi';\nimport CharacterDetail from './CharacterDetail';\nimport Loading from './Loading';\nimport notFoundCharacter from '../images/notFoundCharacter.png';\nimport { Route, Switch, Link } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nconst App = () => {\n  //state\n  const [users, setUsers] = useState([]);\n  const [nameFilter, setNameFilter] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  //api\n  useEffect(() => {\n    setIsLoading(true);\n    getDataFromApi().then((data) => {\n      setUsers(data);\n      setIsLoading(false);\n      //console.log(data);\n    });\n  }, []);\n\n  //events\n  const handleFilter = (data) => {\n    if (data.key === 'name') {\n      setNameFilter(data.value);\n    }\n  };\n\n  const filteredUsers = users.filter((user) => {\n    return user.name.toUpperCase().includes(nameFilter.toUpperCase());\n  });\n\n  filteredUsers.sort((a, b) => {\n    return a.name.localeCompare(b.name);\n  });\n\n  const renderDetail = (props) => {\n    const routeCharacterId = parseInt(props.match.params.characterId);\n\n    const getUsers = users.find((user) => {\n      return routeCharacterId === user.id;\n    });\n    if (getUsers == null) {\n      return (\n        <Link to=\"/\">\n          <div className=\"notfound__Container1\">\n            <p className=\"notFound__text1\">There is no result for this search. Please click here to go back! </p>\n            <img src={notFoundCharacter} alt=\"Sorry\" className=\"notFound__img1\"></img>\n          </div>\n        </Link>\n      );\n    } else {\n      return <CharacterDetail user={getUsers} />;\n    }\n  };\n  //console.log(isLoading);\n\n  return (\n    <>\n      <div>\n        {isLoading === true ? <Loading /> : null}\n        <Header />\n        <Switch>\n          <Route exact path=\"/\">\n            {isLoading === false ? <Filters handleFilter={handleFilter} nameFilter={nameFilter} /> : null}\n            {isLoading === false ? <CharacterList users={filteredUsers} /> : null}\n          </Route>\n          <Route path=\"/character/:characterId\" component={renderDetail} />\n        </Switch>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}